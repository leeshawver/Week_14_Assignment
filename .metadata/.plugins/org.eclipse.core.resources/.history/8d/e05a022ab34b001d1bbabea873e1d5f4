package com.promineotech.jeep.controller;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Map;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.jdbc.SqlConfig;

import com.promineotech.jeep.controller.support.FetchJeepTestSupport;
import com.promineotech.jeep.entity.JeepModel;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
@ActiveProfiles("test")
@Sql(scripts = {
    "classpath:flyway/migrations/V1.0__Jeep_Schema.sql",
    "classpath:flyway/migrations/V1.1__Jeep_Data.sql"}, 
    config = @SqlConfig(encoding = "utf-8"))

class FetchJeepTest extends FetchJeepTestSupport {
	
	@LocalServerPort
	private int serverPort;

	@Test
	void testThatAnErrorIsReturnedWhenAnInvalidTrimIsSupplied() {
	
	// Given: a valid model, trim, and URI
	JeepModel model = JeepModel.WRANGLER;
	String trim = "Invalid value";
	String uri = String.format("http://localhost:%d/jeeps?model=%s&trim=%s", serverPort, model, trim);
	
	System.out.println(getBaseUri());
	
	// When: a connection is made to the URI
	ResponseEntity<Map<String, Object>> response = restTemplate.exchange(
			uri, HttpMethod.GET, null, new ParameterizedTypeReference<>() {});
	
	// Then: a 404 status code is returned
	assertThat(response.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);
	
	// And: an error message is returned
	}
}
